[{"content":"","date":null,"permalink":"/blog/","section":"Blogs","summary":"","title":"Blogs"},{"content":"","date":null,"permalink":"/tags/developers/","section":"Tags","summary":"","title":"Developers"},{"content":"So you want to make a change to your git repo while other people may also be simultaneously working on the same repo. As it takes you longer to make your changes, there is a greater chance that your local repo might already be out of date as other people have pushed their changes. In this setting, you don\u0026rsquo;t want to make your changes directly in master because otherwise you might end up creating large merge commits which makes your repo\u0026rsquo;s history convoluted and not very nice.\nHere\u0026rsquo;s the better git workflow you might want to use in any team of size \u0026gt; 1.\nBefore you make changes, create a branch.\ngit checkout -b MyFeature Next make changes, do commits as usual.\nIf you don\u0026rsquo;t want to rely on your hard drive, you can also keep pushing the changes in your branch on the server every once in a while,\ngit push -u origin MyFeature Once you are done with all your changes, first you want to rebase your branch to master. If master has no new changes since you had created your branch, this will be essentially be no-op. But otherwise, git will take all your commits and play them back on the top of master. This way your commits will look like as if they happened on latest version of master instead of the version you branched out from. This will make commit history of your repo clean and easy to reason about. If you were the only developer, this might not be very important but if there is more than just you then it makes easy to see for other people changes every one is making.\nTo do rebase, first get latest master.\ngit checkout master git pull origin master Then go back to your branch and rebase, i.e.,\ngit checkout Myfeature git rebase master If you are lucky, you won\u0026rsquo;t see the word \u0026ldquo;conflict\u0026rdquo; in git messages but otherwise there is more work for you! If someone already changed file sections you have also changed then you might see list of conflicts. If you get lost in too many messages, use this command to see pending conflicts:\ngit diff --name-only --diff-filter=U Now about resolving conflicts\u0026hellip; there are lots of tools out there and most unfortunately have some problem/confusion installing or using. If you absolutely want GUI tool, install DiffMerge, make sure its in your path and invoke it like,\ngit mergetool -t diffmerge . However my preferred method is to simply open up conflicted file in editor, search for \u0026ldquo;\u0026raquo;\u0026gt;\u0026rdquo; and review sections that looks like:\n\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; HEAD This is change in master ======= This is change in your branch \u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; branch-a Now keep the change you want, delete the markers and you are done with that conflict. Another shortcut is to just tell git to take master\u0026rsquo;s version (\u0026ldquo;ours\u0026rdquo;) or your branch\u0026rsquo;s version(\u0026ldquo;theirs\u0026rdquo;). For example, to resolve all conflicts by overriding using your changes:\ngit checkout . --theirs Another tricky conflict is when file gets deleted by one person and simultaneously changed by you or vice versa. In this case, git will put a deleted file back in your repo and you have to decide either keep that one and/or remove/update your version. You won\u0026rsquo;t have markers this time like above. I tend to use tool like Beyond Compare to compare two files and make edits as needed.\nTo tell git that you have resolved all conflict,\ngit add . Now you can continue with your rebase,\ngit rebase --continue If you don\u0026rsquo;t want to continue because of whatever reason,\ngit rebase --abort Sometime git might error out while doing continue because there is nothing to commit (may be it detected that the change already exists upstream). In that case you can do,\ngit rebase --skip At this point, your changes are now on the top of latest master. You can verify this by looking at quick history of latest 10 commits,\ngit log --pretty=oneline -n 10 Note that everything still reside in your own branch. If you are not yet ready to push to master, keep working in your branch doing more commits as you go. After rebase if you want to save your branch on server, you must do \u0026ndash;force because you are rewriting history.\ngit push --force origin Myfeature This is perfectly fine as long as you are the only one working on the branch.\nOnce you are ready to push, first merge your branch with master,\ngit checkout master git merge --squash MyFeature This shouldn\u0026rsquo;t give any errors or conflict messages because your branch was already synced up to latest master. The \u0026ndash;squash tells git to combine all your commit in to single commit. This is good idea most of the time if you have done lots of commits like \u0026ldquo;added forgotten file\u0026rdquo;, \u0026ldquo;fixed minor typo\u0026rdquo; and so on. It\u0026rsquo;s too much noise and not nice to other people for having to scroll through tons of minor commits to figure out your higher level goals. However its also ok if you don\u0026rsquo;t want \u0026ndash;squash option.\nFinally do the commit after the merge,\ngit commit -m \u0026#34;MyFeature does X\u0026#34; If you did \u0026ndash;squash above then you will see only one commit in your history at the top of previous commits with above message.\nAt this point, you can decide to push your changes to master OR move your changes to new branch and keep working. To move to new branch and revert master to original state,\ngit checkout -b MyFeature2 git checkout master git reset --hard origin/master OR if you are happy, go ahead and\ngit push In either case you can delete the old branch,\ngit push origin -delete MyFeature git branch -d MyFeature And you are done!\nAs usual, there are many ways to do things in git. There is another quicker and simpler way to achieve goal of clean history but its bit limited.\nMake your changes in master, do commits as usual - but don\u0026rsquo;t push. Once in a while you want to sync up with master. To do this use,\ngit pull --rebase This will get all changes from master and then play back your unpushed commits on the top of them. This may generate conflicts as described above so resolve them in same way. Once you are done with your changes, you can push your commits and they should appear on the top without extra merge commits. An obvious problem here is that you can\u0026rsquo;t push until you are really done with changes so this might be ok for quick short changes. If you want to \u0026ldquo;save\u0026rdquo; your commits on server or work from multiple machines for multiple days without pushing to master then above workflow would work better.\n","date":"26 February 2017","permalink":"/blog/git-workflow-branch-rebase-squash-merge/","section":"Blogs","summary":"","title":"Git Workflow: Branch - Rebase - Squash - Merge"},{"content":"","date":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":" In this world of the Greater Being, I feel like I\u0026rsquo;m at play\u0026hellip; like a little kid. With all my sense of wonder and curiosity\u0026hellip; walking on my knees to get close, see and feel everything that has been put around me\u0026hellip; and smile for all those good things that I find. Check out my blog posts.\nFor more latest and greatest follow me on Twitter.\nYou can find a lot of my hobby projects on GitHub.\nYou can find research papers I contributed to at Google Scholar.\n","date":null,"permalink":"/","section":"Welcome! 🎉","summary":"","title":"Welcome! 🎉"},{"content":"","date":null,"permalink":"/tags/gadgets/","section":"Tags","summary":"","title":"Gadgets"},{"content":"Few days ago I got chance to play with HoloLens. Here\u0026rsquo;s the clip I shot from HoloLens in my bedroom during first few minutes with the device. The video posted directly from the HoloLens to YouTube, no postprocessing, and it\u0026rsquo;s very close to what I was seeing:\nFew things that surprised me was how easy it was to just put on the HoloLens and start using it. No calibrations or other complicated settings required! My 3 year old and mother-in-law could take turns without modifying any settings. You can operate the whole device pretty much by using just two gestures and it took about 30 seconds to learn them. Given that how often gesturing fails, I was actually more impressed by its accuracy than almost every other feature. I can even type on virtual keyboard, although it does get tiring.\nI put HoloLens through the battery of tests, some in low light environments like in above video, others around untextured walls and still more in outdoors with relatively large areas and bunch of trees. In all cases, virtual objects maintained their poses in real world and HoloLens knew its own pose fairly accurately. I can put an object in one of the bushes around my home, quickly look away, go around the corner and come back from totally different angle and it\u0026rsquo;s there just like I\u0026rsquo;d put it! Beyond this simplistic tests to see how well SLAM and feature matching algos worked, I also tried out apps like HoloTours and shootout game. In HoloTours, you can see places in Rome and Peru rendered around you in 360-degree! It absolutely impressed me that even though glass is transparent, I can\u0026rsquo;t actually see objects in real world when these 360-degree video was rendered. This is like having VR instead of AR and the black actually looked fairly black. However this is true only for reasonably lit environments. If you have a bright lights in the background, you can \u0026ldquo;see through\u0026rdquo; the virtual environment and \u0026ldquo;VR mode\u0026rdquo; is not convincing any more. In this VR like environment, I thought resolution was fairly good. It\u0026rsquo;s not as if you are watching HD but still it felt better than SD and not falling short for the VR-like experience.\nThings can get pretty real though. I put a roaring dragon spewing fire on the floor and gave HoloLens to my 3 year old to view it. He took one look and said he didn\u0026rsquo;t wanted to see that scary thing again! This was absolutely mesmerizing and addictive. I also checked out galaxy and solar system apps that you often see in Magic Leap demo videos except that you can actually try out in HoloLens right now! I can totally see how this can become indispensable educational tool with well made apps.\nSo the question in everyone\u0026rsquo;s mind: what about field of view? At first I noticed it quite a bit but then got used it. The bottom line is that the whole experience is so magical that you will forget about it pretty soon and your brain seems to adjust to it. It\u0026rsquo;s like when first TVs came out and they were small and black-and-white and low resolution but hey, you are seeing moving images in your home and people still can get immersed in it! In fact, the more bothering thing for me was the color bleeding when you move your head around. I\u0026rsquo;m suspecting if that was the reason I often started to feel bit of headaches after 30 minutes of use. Still having completely untethered device that can do such heavy computational lifting on single battery charge is just totally amazing.\n","date":"24 December 2016","permalink":"/blog/playing-with-hololens/","section":"Blogs","summary":"","title":"Playing with HoloLens"},{"content":"","date":null,"permalink":"/tags/uncategorized/","section":"Tags","summary":"","title":"Uncategorized"},{"content":"Let\u0026rsquo;s say we want to write function to append one vector to another. It can be done like,\ntemplate\u0026lt;typename T\u0026gt; void append(Vector\u0026lt;T\u0026gt;\u0026amp; to, const Vector\u0026lt;T\u0026gt;\u0026amp; from) { to.insert(to.end(), from.begin(), from.end()); } One problem with this approach is that we can only use this function with Vector. So what about all other container types? In languages such as C#, we have IEnumerable that simplifies lot of things but with C++ templates are duck typed and it takes bit more to make above function generic for various container types. Another quick and dirty route is this:\ntemplate\u0026lt;typename Container\u0026gt; void append(Container\u0026amp; to, const Container\u0026amp; from) { to.insert(to.end(), from.begin(), from.end()); } The problem with this approach is that any class with begin() and end() will now qualify for this call. In fact, just in case someone has class with these methods which actually isn\u0026rsquo;t implemented as iterator, you can get some nasty surprises. A simple modification is to make sure we call begin() and end() from std namespace instead of the ones defined on class:\ntemplate\u0026lt;typename Container\u0026gt; void append(Container\u0026amp; to, const Container\u0026amp; from) { using std::begin; using std::end; to.insert(end(to), begin(from), end(from)); } Sure, this is better but wouldn\u0026rsquo;t it be nice if can we restrict the types passed on to this function to only those which strictly behaves like STL containers? Enter type traits! First, we need to define SFINAE type trait for containers. Fortunately Louis Delacroix who developed prettyprint library has already fine tuned this code extensively. Below is mostly his code with a my slight modification that allows to pass it through GCC strict mode compilation. This is lot of code so I would usually put this in a separate file, say, type_utils.hpp, so you can use it for many generic container methods:\n#ifndef commn_utils_type_utils_hpp #define commn_utils_type_utils_hpp #include \u0026lt;type_traits\u0026gt; #include \u0026lt;valarray\u0026gt; namespace common_utils { namespace type_utils { //from: https://raw.githubusercontent.com/louisdx/cxx-prettyprint/master/prettyprint.hpp //also see https://gist.github.com/louisdx/1076849 namespace detail { // SFINAE type trait to detect whether T::const_iterator exists. struct sfinae_base { using yes = char; using no = yes[2]; }; template \u0026lt;typename T\u0026gt; struct has_const_iterator : private sfinae_base { private: template \u0026lt;typename C\u0026gt; static yes \u0026amp; test(typename C::const_iterator*); template \u0026lt;typename C\u0026gt; static no \u0026amp; test(...); public: static const bool value = sizeof(test\u0026lt;T\u0026gt;(nullptr)) == sizeof(yes); using type = T; void dummy(); //for GCC to supress -Wctor-dtor-privacy }; template \u0026lt;typename T\u0026gt; struct has_begin_end : private sfinae_base { private: template \u0026lt;typename C\u0026gt; static yes \u0026amp; f(typename std::enable_if\u0026lt; std::is_same\u0026lt;decltype(static_cast\u0026lt;typename C::const_iterator(C::*)() const\u0026gt;(\u0026amp;C::begin)), typename C::const_iterator(C::*)() const\u0026gt;::value\u0026gt;::type *); template \u0026lt;typename C\u0026gt; static no \u0026amp; f(...); template \u0026lt;typename C\u0026gt; static yes \u0026amp; g(typename std::enable_if\u0026lt; std::is_same\u0026lt;decltype(static_cast\u0026lt;typename C::const_iterator(C::*)() const\u0026gt;(\u0026amp;C::end)), typename C::const_iterator(C::*)() const\u0026gt;::value, void\u0026gt;::type*); template \u0026lt;typename C\u0026gt; static no \u0026amp; g(...); public: static bool const beg_value = sizeof(f\u0026lt;T\u0026gt;(nullptr)) == sizeof(yes); static bool const end_value = sizeof(g\u0026lt;T\u0026gt;(nullptr)) == sizeof(yes); void dummy(); //for GCC to supress -Wctor-dtor-privacy }; } // namespace detail // Basic is_container template; specialize to derive from std::true_type for all desired container types template \u0026lt;typename T\u0026gt; struct is_container : public std::integral_constant\u0026lt;bool, detail::has_const_iterator\u0026lt;T\u0026gt;::value \u0026amp;\u0026amp; detail::has_begin_end\u0026lt;T\u0026gt;::beg_value \u0026amp;\u0026amp; detail::has_begin_end\u0026lt;T\u0026gt;::end_value\u0026gt; { }; template \u0026lt;typename T, std::size_t N\u0026gt; struct is_container\u0026lt;T[N]\u0026gt; : std::true_type { }; template \u0026lt;std::size_t N\u0026gt; struct is_container\u0026lt;char[N]\u0026gt; : std::false_type { }; template \u0026lt;typename T\u0026gt; struct is_container\u0026lt;std::valarray\u0026lt;T\u0026gt;\u0026gt; : std::true_type { }; template \u0026lt;typename T1, typename T2\u0026gt; struct is_container\u0026lt;std::pair\u0026lt;T1, T2\u0026gt;\u0026gt; : std::true_type { }; template \u0026lt;typename ...Args\u0026gt; struct is_container\u0026lt;std::tuple\u0026lt;Args...\u0026gt;\u0026gt; : std::true_type { }; }}\t//namespace #endif Much better!\n","date":"5 June 2016","permalink":"/blog/writing-generic-container-function-in-c11/","section":"Blogs","summary":"","title":"Writing Generic Container Functions in C++11"},{"content":"One of the great feature that many C++ programmers rarely use is GCC strict mode compilation. Enabling this lets compiler warn you about any potential issues that might often get unnoticed in build noise. Unfortunately there is little documentation, let alone quick tutorial on this subject so I thought to write this up.\nFirst, let\u0026rsquo;s clear this up: There is no official GCC mode called \u0026ldquo;strict\u0026rdquo;. I just made that term up. Fortunately there are enough compiler options that you can rig up to create \u0026ldquo;strict\u0026rdquo; mode that is often available in many other languages.\nTo get the \u0026ldquo;strict\u0026rdquo; mode, I use following command line options for gcc/g++. Below are written in format consumable in CMakeList.txt but you can use same options from pretty much anywhere.\nset(CMAKE_CXX_FLAGS \u0026#34;-std=c++11 -Wall -Wextra -Wstrict-aliasing -pedantic -fmax-errors=5 -Werror -Wunreachable-code -Wcast-align -Wcast-qual -Wctor-dtor-privacy -Wdisabled-optimization -Wformat=2 -Winit-self -Wlogical-op -Wmissing-include-dirs -Wnoexcept -Wold-style-cast -Woverloaded-virtual -Wredundant-decls -Wshadow -Wsign-promo -Wstrict-null-sentinel -Wstrict-overflow=5 -Wswitch-default -Wundef -Wno-unused -Wno-variadic-macros -Wno-parentheses -fdiagnostics-show-option ${CMAKE_CXX_FLAGS}\u0026#34;) That\u0026rsquo;s a looong list of compiler options so now I hope you can agree that we really mean \u0026ldquo;strict\u0026rdquo; business here :). In essence it enables extra warnings and makes all warnings as errors, points out coding issues that borderlines on pedantic and then on top of that enables some more warnings. Rest assured, above is not an overkill. You are going to thank compiler for taking care of these stuff as your code base becomes larger and more complex.\nUnfortunately, road from here has lots of twist and turns. The first thing that might happen to you is that you will get tons of errors, most likely not from your own code but from the included headers that you don\u0026rsquo;t own! Because of the way C++ works, other people\u0026rsquo;s bad code in their included header becomes your liability. Except for Boost and standard library, I haven\u0026rsquo;t found many packages that can get through strict mode compilation. Even for relatively nicely written packages such as ROS you will get tons of compiler errors and for badly written packages such as DJI SDK, forget about it. Right\u0026hellip; So now what?\nHere\u0026rsquo;s the fix I have used with fair amount of success. First, declare these two macros in some common utility file you have in your project:\n#define STRICT_MODE_OFF \\ _Pragma(\u0026#34;GCC diagnostic push\u0026#34;) \\ _Pragma(\u0026#34;GCC diagnostic ignored \\\u0026#34;-Wreturn-type\\\u0026#34;\u0026#34;) \\ _Pragma(\u0026#34;GCC diagnostic ignored \\\u0026#34;-Wdelete-non-virtual-dtor\\\u0026#34;\u0026#34;) \\ _Pragma(\u0026#34;GCC diagnostic ignored \\\u0026#34;-Wunused-parameter\\\u0026#34;\u0026#34;) \\ _Pragma(\u0026#34;GCC diagnostic ignored \\\u0026#34;-pedantic\\\u0026#34;\u0026#34;) \\ _Pragma(\u0026#34;GCC diagnostic ignored \\\u0026#34;-Wshadow\\\u0026#34;\u0026#34;) \\ _Pragma(\u0026#34;GCC diagnostic ignored \\\u0026#34;-Wold-style-cast\\\u0026#34;\u0026#34;) \\ _Pragma(\u0026#34;GCC diagnostic ignored \\\u0026#34;-Wswitch-default\\\u0026#34;\u0026#34;) /* Addition options that can be enabled _Pragma(\u0026#34;GCC diagnostic ignored \\\u0026#34;-Wpedantic\\\u0026#34;\u0026#34;) \\ _Pragma(\u0026#34;GCC diagnostic ignored \\\u0026#34;-Wformat=\\\u0026#34;\u0026#34;) \\ _Pragma(\u0026#34;GCC diagnostic ignored \\\u0026#34;-Werror\\\u0026#34;\u0026#34;) \\ _Pragma(\u0026#34;GCC diagnostic ignored \\\u0026#34;-Werror=\\\u0026#34;\u0026#34;) \\ _Pragma(\u0026#34;GCC diagnostic ignored \\\u0026#34;-Wunused-variable\\\u0026#34;\u0026#34;) \\ */ #define STRICT_MODE_ON \\ _Pragma(\u0026#34;GCC diagnostic pop\u0026#34;) Here we have two macros, one tells GCC to turn off selected warnings before some chunk of code and second tells GCC to re-enable it. Why can\u0026rsquo;t we just turn off all strict mode warnings at once? Because GCC currently doesn\u0026rsquo;t have that option. You must list every individual warning :(. Above list is something I just put together while dealing with ROS and DJI SDK and is obviously incomplete. Your project might encounter more stuff in which case you will need to keep adding in to above list. Another issue you might encounter is that GCC currently doesn\u0026rsquo;t support suppressing every possible warnings! Yes, a big oops there. One of them that I recently encountered in DJI SDK was this:\nwarning: ISO C99 requires rest arguments to be used The only way out for me in this case was to modify DJI\u0026rsquo;s source code and submit the issue to them so hopefully they will fix it in next release.\nOnce you have above macros, you can place them around problematic headers. For example,\n#include \u0026lt;string\u0026gt; #include \u0026lt;vector\u0026gt; STRICT_MODE_OFF #include \u0026lt;ros/ros.h\u0026gt; #include \u0026lt;actionlib/server/simple_action_server.h\u0026gt; #include \u0026lt;dji_sdk/dji_drone.h\u0026gt; STRICT_MODE_ON #include \u0026#34;mystuff.hpp\u0026#34; We are not out of the water yet because above trick will work only for some header files. The reason is that GCC sometime doesn\u0026rsquo;t compile entire file as soon as it encounters #include statement. So it\u0026rsquo;s pointless to put macros around those #include statements. Solving those issues requires some more work, and in some cases a lot more work. The trick I used was to create wrappers around things you use from bad headers such that only those wrappers needs to use #include \u0026lt;BadStuff.h\u0026gt; statements and rest of your code doesn\u0026rsquo;t need those header. Then you can disable strict mode for the wrappers and rest of your code remains clean. To do this, you would need to implement pimpl pattern in your wrapper classes so that all objects in BadStuff.h are behind opaque member. Notice that #include \u0026lt;BadStuff.h\u0026gt; statements would be in your wrapper.cpp file, not wrapper.hpp file.\nEven though this might require significant work in big project, it\u0026rsquo;s often worth it because you are clearly separating interface and dependency for the external stuff. Your own code then remains free of #include \u0026lt;BadStuff.h\u0026gt;. This will enable you to do even more things like static code analysis just for your code. In either case, consider contributing to those project with bad stuff and make them pass strict compilation!\nSo as it happens, working strict mode requires buy off from C++ community. If everyone isn\u0026rsquo;t doing it then it becomes hard for others. So, tell everyone and start using yourself today!\n","date":"24 May 2016","permalink":"/blog/how-to-enable-and-use-gcc-strict-mode-compilation/","section":"Blogs","summary":"","title":"How to Enable and Use GCC Strict Mode Compilation"},{"content":"","date":null,"permalink":"/tags/astronomy/","section":"Tags","summary":"","title":"Astronomy"},{"content":"Well, bad news. Weather isn’t looking good for tomorrow’s historic event.\nIt’s like 80% chance of showers almost entire Pacific Northwest extending even in to Eastern Washington. Even LIGO Observatory is not going to have sun shine. But if\nyou believe that a hole in the sky might appear just to take pick then there are [several events\nlined up for public viewing]3 with free entry and no registration. Public events are much safer way to view Venus Transit\nbecause they would have appropriate solar filters and/or projection boards. Some might even have live webcasts. If that much\nanticipated hole in the sky does not appear then here are the options for online viewing:\nNASA Live Webscast Slooh Venus Transit Event Live from Mauna Loa, HI Mount Wilson Observatory webcast …and other places It would be also good time to brush up on Venus peculiarities and\n[some historical\ncontext]10.\n","date":"4 June 2012","permalink":"/blog/viewing-venus-transit-in-seattle-area/","section":"Blogs","summary":"","title":"Viewing Venus Transit in Seattle Area"},{"content":"","date":null,"permalink":"/tags/geekery/","section":"Tags","summary":"","title":"Geekery"},{"content":"We went to Mini Makers Faire in Seattle today and one of most surprising thing I learned was how abundant are the local\nresources for hackers and makers! Reminded me of geek fairy tales of Homebrew Computer Club that you often hear. Here are some of the things\nyou want to check out if you are interested in making stuff and live in Seattle area:\nMetrix Create: Space – I think this was the coolest thing I came to know about.\nThey have a shop with everything from sewing machine to electronics. They run lots of interesting workshops \u0026amp; classes. It’s your neighborhood fab lab!\nMake Seattle Meetup Group – Regular meet ups for Arduino/electronics makers and\nlearners to exchange ideas and get help on your projects\nWest Seattle Tools Library – I thought this was the coolest concept. They have a\ncollection of 1500 tools that you can checkout for your projects. Just look at their tool of the week series. There is also Fixers Collective who meet up at Tools Library and would be happy to fix your broken stuff or just\ntinker around.\n[Xbot Robotics\nWorkshop Space]4 – They provide you space to work on your projects along with access to almost everything you need such as\npower tools, soldering stations, oscilloscopes, electronics components, drill presses, sand blasters, table saws, sanders,\ngrinders!\nThere were quite a few of cool things we saw there everything from [The\nBrain Machine]5, Zigduino, Lifesuit, Drawbots, to The Most Useless Machine Ever.\nI also jotted down the next classes I want to do at Pratt and All Metal Arts.\n","date":"4 June 2012","permalink":"/blog/groups-places-and-collectives-for-makers-in-seattle-area/","section":"Blogs","summary":"","title":"Groups, Places and Collectives for Makers in Seattle Area"},{"content":"There is no substitute to reading official Survival Guide but it does leaves out many things. So instead of writing my detailed trip report I thought about all the mistakes I’d made and converting them to tips. Here it goes…\nSun shelter (things that look like REI Alcove) is absolutely essential if you just have a camping tent. I would however not recommend REI Alcove itself because it broke after withstanding 3 days of sandstorms. Obviously you also need nice camping chair to go with it. Regular tent stacks are not very useful to secure tents on playa. I didn’t believed that and my tent almost came out in sandstorms. The correct way to secure tent in playa is using something called “rebars”. You need 4 rebars for a regular camping tent, each 3” long and 1/2” wide. You need another 4 or 6 for sun shelter. Stores like Home Depot would cut the metal rod for you in these sizes. Of course, you will need big hammer as well to stack them (they don’t have pointy end). Finally, it’s a hazard to leave other end of these rusty metal rods open so you must stick a tennis ball or empty bottles on end of the rod that is sticking out. Sandstorms! In 2009 there were 3 full days of sandstorms. If you never seen one then here’s how it works: About 20-60 foot tall wall of sand that comes at you at anywhere between 10 miles to 40 miles an hour. The visibility typically drops to 5ft to 50ft and you see brownish sand everywhere around you. This can last for up to 8 hours straight. It actually looks cool and as a matter of fact I intentionally spent lots of time inside sandstorm taking photos (note: Many SLRs are not dust proof). Even on severe storm days almost everyone continued their activities as if it was normal weather. But they were prepared. Here’s what you need to be prepared:\nYou have to have sun glasses with minimum open space around lenses. I had Tifosi Ventoux and they worked kind of OK. A retainer is also essential not to loose them (remember there are no shops to buy extra pair). Mask for the nose and mouth. I used Buff bandana so I can pull it up all the way to sunglasses. Next time I would also be using this, this or this mask so I can be absolutely worry free about staying longer out in dust storms. Hat with cord and visor. This will allow you to walk heads down while visor protects your face. I used this hat and it’s absolutely the best hat I’ve ever owned. Added advantage of this hat is that it’s veil can be put in the direction of wind. As a first timer I found that 4 nights provides a very good breadth and depth for the experience. The reason it’s perfect is because you have to carry less food and water, not worry too much about getting shower and you still get to see nearly everything that’s out there. I would strongly recommend against staying less than 3 nights. Make a stop at Reno at least for a night before heading towards Black Rock City. Besides mini-Las Vegas style environment, you can also visit REI, Walmart and Walgreens to get the gear, water, grocery and so on. Pepermill Resort is where I stayed overnight because it’s cheapest awesome hotel in Reno. A compass is very useful to have to get on the right street when coming back in the night far away from playa. If you have 3-season camping tent you are probably in trouble. These tents usually have mesh in the walls for ventilation and they have rain fly to protect against rain. This arrangement however is pretty useless to protect against sandstorms. On a typical stormy day I would get about half inch layer of sand inside my 3 season tent and I had to spend an hour every night cleaning things up. Make sure you have duct tapes and things to cover up. Everything outside tent should be tied to rebars so it doesn’t fly away with storms. Weather at burning man is 110F+. It’s normally not possible to sleep inside the tent after 10 AM. It’s not unusual to stay up until 3 AM. Nights are cold and you will need a fleece jacket. I’d 30 degree rated bag which was bit warmer but worked fine. BTW, try to bring sleeping bag liner to avoid it getting sweaty. As a first timer it might be hard to understand culture of gifts. For example, someone I don’t know at all would give me something and I would be confused if I should really take it. This can spoil the experience for the giver and the taker. Here’s how it works: If someone gives you a gift, take it with a smile without hesitation and give them a gift in return. It’s that simple. The only thing to remember is to bring bunch of gifts that you can easily carry around. Here are some of the examples of gifts: Custom stickers with your favorite quotes, necklaces, bead jewelry, things that glows, Trillion Dollars Notes, candies, custom printed postcards and so on. A single major mistake first timers make is not to bring gifts to give away. Bicycles would be your savior. If you can’t bring from home then rent or steal from Reno. BRC is really huge and you would be lucky if you could walk just one street a day. Most events that I was interested usually were many miles apart and it’s impossible to make it on time without bicycle. Besides you really don’t want to get tired after walking 10 miles just to attend couple of events. As soon as you enter gate you will be handed a map and booklet of events. The map is easy to understand because of it’s semi-circle streets. Any location is specified by using hand of clock and name of the street. The 6 o’clock is the center while 2 o’clock and 10 o’clock are two ends of semi-circle. The street names are different every year depending on the theme. There is NO assigned camping sites at Burning Man (except for theme camps). Normally all except outer two streets are occupied within first couple of days. When I arrived on Wednesday evening I decided to keep as much distance from outer road as possible because that’s where all the cars keep passing by. But I did not wanted to be too inside because the view of vast playa on the outer street is awesome. I also wanted to stay in middle so distance to get on any side is minimized. Always consider if your neighbors have enough space around their tent to put picnic table or chairs or grills or another car. The best space I found on Wednesday night was at 7:15 and Kinship. If someone asks you “which camp are you in?” then that usually means “what is the name of your camp?”. You can consult with your neighbor to decide on some name for group camp and put on the sign. You can also tell the location such as 7:15 \u0026amp; Kinship like other first timers do. The iPhone \u0026amp; AT\u0026amp;T did worked with full 4 bars at Black Rock City in 2009. It’s really really a good choice to turn it off and resist temptation to tweet/facebook for your entire stay. Here’s one of the most disgusting part of my Burning Man experience: The place I choose to camp was up-winds in the path of potty patties. That means every time wind blew even a little it would smell really really bad. It was horrible. Fortunately I came to my tent only to sleep when smell was gone. It’s really worth to make sure you avoid such smelly spaces. Don’t wear jeans at Burning Man! Many places that do not allow jeans believe that they are too “casual” for them but at Burning Man you don’t want to wear jeans because they would be too “formal”! I wore my normal jeans on first night and felt so out of place and formal that it was embarrassing. If you must wear jeans then take your old jeans, paint them or tear them or whatever. Shorts are semi-casual options at Burning Man. The list of events at Burning Man is overwhelming. You do not have to go crazy to attend as many events as possible and it’s best to chose no more than 3 events per day to attend. It’s good idea to reserve one day just sit back at your tent and look at vast playa in mild warm wind :). Cooking at Burning Man can get tricky because of sandstorms. I’d bought my camping stove which didn’t work out in storms. Fortunately more prepared folks did cooking in their camps and gave away lots of free food. I’d also bought some non-perishable stuff like bananas, milk powder, Sahale snacks, bars, chips and so on. One last option for food is to go back to town via bus or car but that might ruin your experience. Fortunately I did not had that option because I didn’t had car and I never found the bus. One good outcome was that I lost few pounds! Next time I might just buy or rent a grill because it work better in dust storms. I estimated 1.5 gallon of water per day per person and it worked out well for me. You can meet and greet your neighbors without feeling awkward. When you cook meal, offer some to them. Always have at least two gifts to give away to your two neighbors while departing. Example of gifts are some sketch you made while at Burning Man or other art work or a poem or your favorite book or some photo you took. Yes, you do need kitchen sink! You will need it to brush teeth, wash hands etc. It’s not OK to spill water with soap on playa floor but if your sink is small and soap biodegradable then you would be ok to collect water in it and then go to outer street to flung it away Most people do not shower at Burning Man (or so I think). There are few elaborate large camps that set up showers and some even offer them to others as well. But in general, don’t expect showers. Alternative is wet towel to wipe off of your body. Many camps on inner circle serves free drinks to anyone who wants but you need to bring your own cup. It helps a lot if you have a cup with lid. There is a place everybody refers to as “The Temple”. It’s located beyond The Man and many first timers would even miss it because they usually don’t go beyond The Man (it’s a LONG walk too). The Temple is truly sacred in many aspects without being connected to even the concept of religion. It’s humbling and even moving to spend a day at the temple. The Temple burns on next day after The Man burns and more spectacularly. Burning Man usually has 35,000+ people which causes 2 to 4 hours of traffic jams while leaving. While it’s fun to see the parade of every RV ever made, the time with least traffic to leave Burning Man is on Saturday night after The Man burns. But the flip side is that you will miss even more spectacular burn of The Temple which is on Sunday night. Another flip side of leaving on Saturday night is that you run huge risk of falling sleep while driving. When I left on Saturday night I saw at least 3 accidents on the way and so I decided to just pull over and sleep anyway. For my next time, I would be leaving on Monday late afternoon. Finally here are pictures from my trip which hopefully would give some idea about what to expect.\n","date":"26 August 2010","permalink":"/blog/burning-man-tips-for-the-first-timers/","section":"Blogs","summary":"","title":"Burning Man Tips for the First Timers"},{"content":"","date":null,"permalink":"/tags/events/","section":"Tags","summary":"","title":"Events"},{"content":"","date":null,"permalink":"/tags/outside/","section":"Tags","summary":"","title":"Outside"},{"content":"Usual weather websites do not give you the forecast at a point but rather around some town/city which renders them pretty useless for mountains. Here are the collected links for mountain weather forecasts for Washington:\nMount Rainier at Paradise Visitor Center Mount Rainier at Camp Muir North Cascades NP – Sahale Arm North Cascades NP – Sahale Arm TH north Cascades NP – Windy Pass North Cascades NP – Mount Pilchuck TH Mount St Helens – Windy Ridge Mount St Helens – Windy Ridge TH Mount Baker – Artist Point Mount Baker – Skyline Divide Mount Baker – Ptarmigan Ridge TH Enchantments Olympics – Hurricane Ridge Olympics – Hole in the Wall Olympics – Mamot Pass TH Oregon Coast – Nehalem Bay State Park Mount Hood – Timberline Lodge Mount Hood – Vista Ridge Snoqualmie Pass Corridor – Mount Si Snoqualmie Pass Corridor – Granite Mountain Snoqualmie Pass Corridor – Chair Peak/Snow Lake Salmon La Sac – Iron Peak TH Esmeralda Basin TH ","date":"26 August 2010","permalink":"/blog/mountain-weather-in-washington/","section":"Blogs","summary":"","title":"Mountain Weather in Washington"},{"content":"Today I got in to some heavy weight TSQL tuning. This time the target was a legendary sproc that was taking 3 mins and now I’m about to call it a day when this giant SP is eating only 16 sec. Not excellent but not bad at this point. Here are some notes…\nApparently resetting identity using DBCC CHECKIDENT can be expensive operation if you are also deleting all items from the table. One way to reduce time is use TRUNCATE TABLE before DBCC CHECKIDENT. I prefer table variables instead of temp tables but one place temp tables are required is if you have lots of data in them and want index! Data Tuning Wizard would come out with zero suggestions on many occasions but it does not mean there are no significant optimizations possible. The best way to “guess” possible index is to have index for all columns used in join and use INCLUDE clause that has columns accessed in SELECT. This last thing does attracts even the least interested query plans to use the index :). If you have temp tables, it’s usually better to create index after you have inserted data instead of before. If you have complex sproc, SQL Server Profiler will spit out thousands of trace lines during the run. A quick way to pin point the SQL statements needing performance tuning is to use File \u0026gt; Save As to put the trace results in to a table. You can use then following query that immediately surfaces culprits. Notice that statements which run in WHILE loop might take less time individually but collectively their duration sum may be higher. Below query would reveal this culprits immediately. select SUBSTRING(TextData, 1, 4000), SUM(duration), COUNT(1) from [SavedTrace] group by SUBSTRING(TextData, 1, 4000) order by 2 desc One of the big performance hits occur when you must process individual rows one at a time instead of in set. For instance, let’s say you have a table with a column that has comma delimited values. Now you want to split these values in each cell and create a new table which would have N rows for each row in original table – one for each spitted value. The Internet is littered with dozen ways to split strings in TSQL, some even uses CTEs (not a good idea because there are lots of gotchas like max recursion limit). So far the best way is to use SQL CLR with code like below. Its as fast as any native TSQL juggling, if not faster. However most important thing here is not SQL CLR but how you use this table valued function and here’s the secret: The best bang for the performance you would get is using CROSS APPLY (or OUTER APPLY) with table valued UDF.\npublic partial class UtilityFunctions { [Microsoft.SqlServer.Server.SqlFunction(FillRowMethodName = \u0026amp;lt;span class=\u0026#34;c10\u0026#34;\u0026gt;\u0026#34;FillRow\u0026#34;, TableDefinition=\u0026amp;lt;span class=\u0026#34;c10\u0026#34;\u0026gt;\u0026#34;StringPart nvarchar(max)\u0026#34;, IsDeterministic=true, IsPrecise=true, SystemDataAccess=SystemDataAccessKind.None)] public static IEnumerable ClrSplitString(SqlString sqlStringToSplit, SqlChars delimiter, SqlBoolean removeEmptyEntries) { if (!string.IsNullOrEmpty(sqlStringToSplit.Value)) { return sqlStringToSplit.Value.Split(delimiter.Value , (StringSplitOptions)(removeEmptyEntries ? StringSplitOptions.RemoveEmptyEntries : StringSplitOptions.None)); } else { return null; } } public static void FillRow(object obj, out SqlString splittedString) { if (obj != null) splittedString = new SqlString((string)obj); else splittedString = SqlString.Null; } } ","date":"27 January 2010","permalink":"/blog/a-day-in-sql-tuning/","section":"Blogs","summary":"","title":"A Day in SQL Tuning"},{"content":"","date":null,"permalink":"/tags/physics/","section":"Tags","summary":"","title":"Physics"},{"content":"Gym machines like treadmills and even some roads express the slop as \u0026ldquo;grade\u0026rdquo; in percentage. For example, most gym treadmills allow up to 15% grade. I\u0026rsquo;ve left going to gym since last few months and instead I\u0026rsquo;m doing this Snoqualmie Falls hike almost every other day (which is 0.5 miles one way and 300ft elevation). But occasionally I have to go to gym because of early sunsets. I usually put max grade (15%) and speed walk for one mile burning 350 cal. So naturally the question is how many feet I climbed?\nFor this I need to convert grade in % to angle. But what is \u0026ldquo;grade%\u0026rdquo;? Turns out it\u0026rsquo;s ration of rise/run or in other words,\n$$ grade=\\frac{tan(\\theta)}{100} $$\nSo your vertical climb in feet is given by,\n$$ \\sin(\\tan^{-1}(grade*100))*5280 miles $$\nSo by that calculation, at maximum grade on gym treadmill I climb 783.2 feet for each mile I walk. Not too bad.\nVia conversation here.\n","date":"14 February 2009","permalink":"/blog/treadmill-grade-to-angle-conversion/","section":"Blogs","summary":"","title":"Treadmill Grade to Angle Conversion"},{"content":"I LOVE slot canyons and Zion Narrows hike is something on my To-do for very long time since I saw it in a documentary and IMAX. So when I saw this deal from Southwest about 50% off on all travels my first thought was to book tickets to Las Vegas (nearest to Zion) or SLC. Due to restriction on this deal the travel needs to be completed by May 31st.\nSo the question: Is last week of May the best time to do Zion Narrows? I\u0026rsquo;ve fanatically looked for answer all over and here\u0026rsquo;s the summary. Disclaimer: that I haven\u0026rsquo;t been there so all these research comes from web, not my experience.\nMy criteria for \u0026ldquo;best time\u0026rdquo; is fairly simple:\nAvoid wearing dry/wet suit to do this hike Avoid wading in 1ft of water for miles Pleasant 70s temperature that allows good other hikes like Angel\u0026rsquo;s Landing Several websites have various opinions on \u0026ldquo;best time\u0026rdquo;. A top Google hit puts up a table indicating May, June and Septembers are the best. This is way too fuzzy answer because early May is actually as worse as April and it doesn\u0026rsquo;t tell you different late May really is compared to late June. Yes, there is a big difference!\nNext, other websites gets more specific and tells you late June and late September is the best time. We are getting closer to a specific answer but still no data points.\nAfter lot of searching I finally hit the pot of gold:USGA Water Data! This website has exact numbers for CFS (cubic foot per second) and gage height data for each day all the way back to 1988. The rules are quite simple: anything below 50 CFS is easy and 250 FS is too much. The USGA has done fantastic job in presenting this data on website. For example, here you can see CFS levels for 2008:\nNow you can see late May is not all that good but it is rapidly getting better over entire June although it takes all of the June before we get 40 CFS. This means late June is pretty good time to go but difference between early June and late June is almost two fold! Then notice all those spikes in early July. My guess is those are flash floods or thunderstorms. On other hand look how stable mid-end September is! We get 30 CFS almost all month.\nSo we are looking at about foot of water at May end and about quarter of that in mid-end September.\nLikewise you can go through charts for may years back. It obviously varies from year to year. For example, year 2007 had very low stable CFS at end of May unlike rapidly decreasing high levels of 2008.\nFor the past few years worth of charts that I checked one theme emerges: mid to end September has most stable and low CFS!\nBut how about temperatures? Here\u0026rsquo;s where Weather Underground\u0026rsquo;s seasonal average feature helps! Here is the seasonal averages weather graph for Zion National Park:\nAs you can see, the temperature in mid-September is pleasant 70s just like in June.\nSo there you have it! Mid September to September end (2nd and 3rd weeks of September) is the best time to go to Zion National Park and Narrows. That\u0026rsquo;s when you are most likely to get stable low water levels.\n","date":"23 January 2009","permalink":"/blog/what-is-the-best-time-to-hike-zion-narrows/","section":"Blogs","summary":"","title":"What is the best time to hike Zion Narrows?"},{"content":"Today I tried Mount Si hike again and returned back before I saw \u0026ldquo;Snag Flats\u0026rdquo;, second time. Snag Flats are supposed to somewhere between 1300\u0026rsquo; to 1500\u0026rsquo;. It\u0026rsquo;s relatively small hike that you can do in 2-3 hours (full hike to summit of Mount Si is a long 8 hour 3200\u0026rsquo; climb). Today because of heavily packed wet snow it was extremely slippery. Many people even had crampons on. People who did not had any traction devices (like me) had very hard time to go up on slippery trail and even harder time to come down.\nI would not do this trail without wearing Kahtoola Microspikes.\nLast time I\u0026rsquo;d to turn back at1250\u0026rsquo; because I\u0026rsquo;d started too late and it was getting dark. Today I got up to 1440\u0026rsquo; but still saw no sign of so called snag flats or a view point where Mailbox peak and Mt Rainier can be seen. But then I suddenly realized that I\u0026rsquo;d forgotten my camera on the trail during last water break! So I went down to look for it but didn\u0026rsquo;t found it. I finally got down in parking lot and walked there for quite sometime looking for any lost \u0026amp; found places (Mount Si trailhead has HUGE parking lot and somehow there are always dozen cars there). Several people were coming down or going up but no one had seen it.\nThen an amazing thing happened. Just when I was driving out the parking lot and I was almost out, I decided to stop for a minute and put up a sticky note. And I suddenly saw 3 guys coming down and they had my camera! It was just a matter of few seconds and I would have left. Thank you strangers!\nPS: Those 3 guys mentioned that they were going to return it to ranger station. So next time if you loose something always check with ranger station or forest service.\n","date":"5 January 2009","permalink":"/blog/mount-si-take-2/","section":"Blogs","summary":"","title":"Mount Si - Take #2"},{"content":"Here\u0026rsquo;s the list of problems used in ACM Turing programming contest. Surprisingly, like many other such contests, lots of problems are s simply a variant of shortest-path problem. The ACM ICPC Problem Set Archive\n","date":"13 April 2006","permalink":"/blog/the-acm-turing-programming-contest-problem-set-archive/","section":"Blogs","summary":"","title":"The ACM Turing Programming Contest Problem Set Archive"},{"content":"The individuals in population and their interaction with each other very closely models neural activities in brain. The entire neural network can be looked upon as smaller fractal version of human population, with lot of details vanished. It occurs to me that an alien might prefer to look upon Earth as the planet hosting one huge \u0026ldquo;brain\u0026rdquo; with individual humans essentially just forming \u0026ldquo;cells\u0026rdquo; for this brain.\n","date":"30 September 2005","permalink":"/blog/earth-the-largest-neural-model/","section":"Blogs","summary":"","title":"Earth: The Largest Neural Model"},{"content":"","date":null,"permalink":"/tags/machine-learning/","section":"Tags","summary":"","title":"Machine Learning"},{"content":" Shital Shah If universe is an optimizer, what is its loss function? Hello there! I\u0026rsquo;m a Research Engineer at Microsoft Research with interests in deep learning and reinforcement learning.\nSome of my open source works:\nI lead a team for the code infrastructure to train the Phi series of models: Phi-1, Phi-2, Phi-3, Phi-4. I co-created Archai, Neural Architecture Search (NAS) framework that we used to create one of the super tiny Transformer models powering the text completition feature in many Microsoft products. I conceived and created AirSim, a physically and visually realistic cross-platform simulator for AI research I conceived and created TensorWatch, a new approach for debugging training and visualization of vision models. You can find a lot of my hobby projects on GitHub.\nYou can find research papers I contributed to at Google Scholar.\nYou can follow me on twitter for posts mainly on deep learning code and research.\n","date":null,"permalink":"/misc/about/","section":"Miscs","summary":"","title":"About"},{"content":"","date":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":null,"permalink":"/misc/","section":"Miscs","summary":"","title":"Miscs"}]